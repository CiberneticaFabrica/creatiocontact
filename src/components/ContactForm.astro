---
// Componente de formulario multi-paso
---

<div class="multi-step-form">
  <!-- Barra de progreso -->
  <div class="progress-bar">
    <div class="progress-step active" data-step="1">
      <div class="step-number">1</div>
      <div class="step-label">Job location</div>
    </div>
    <div class="progress-step" data-step="2">
      <div class="step-number">2</div>
      <div class="step-label">Job position</div>
    </div>
    <div class="progress-step" data-step="3">
      <div class="step-number">3</div>
      <div class="step-label">Personal details</div>
    </div>
  </div>

  <!-- Paso 1: Ubicaci√≥n del trabajo -->
  <div class="form-step active" id="step1">
    <h2>Job location</h2>
    <div class="form-group">
      <label for="location">Location: city, area...</label>
      <div class="input-with-icon">
        <input 
          type="text" 
          id="location" 
          name="location" 
          required 
          placeholder="Enter your preferred location"
        />
        <span class="input-icon">üìç</span>
      </div>
    </div>
    
    <div class="suggestions">
      <button type="button" class="suggestion-btn" data-location="Manchester">Manchester</button>
      <button type="button" class="suggestion-btn" data-location="Liverpool">Liverpool</button>
      <button type="button" class="suggestion-btn" data-location="Leeds">Leeds</button>
      <button type="button" class="suggestion-btn" data-location="London">London</button>
      <button type="button" class="suggestion-btn" data-location="Newcastle">Newcastle</button>
    </div>
  </div>

  <!-- Paso 2: Posici√≥n del trabajo -->
  <div class="form-step" id="step2">
    <h2>Job position</h2>
    <div class="form-group">
      <label for="roles">Roles: job title, position</label>
      <div class="input-with-icon">
        <input 
          type="text" 
          id="roles" 
          name="roles" 
          required 
          placeholder="Enter job title or position"
        />
        <span class="input-icon">üîç</span>
      </div>
    </div>
    
    <div class="job-cards">
      <div class="job-card" data-role="360 Operator">
        <div class="job-radio">
          <input type="radio" name="selectedJob" value="360 Operator" id="job1">
          <label for="job1"></label>
        </div>
        <div class="job-content">
          <h3>360 Operator</h3>
          <p>Operate heavy machinery and equipment on construction sites</p>
          <span class="salary">from ¬£30 per hour</span>
        </div>
      </div>
      
      <div class="job-card" data-role="Site Manager">
        <div class="job-radio">
          <input type="radio" name="selectedJob" value="Site Manager" id="job2">
          <label for="job2"></label>
        </div>
        <div class="job-content">
          <h3>Site Manager</h3>
          <p>Oversee construction projects and manage teams</p>
          <span class="salary">from ¬£40 per hour</span>
        </div>
      </div>
      
      <div class="job-card" data-role="Project Manager">
        <div class="job-radio">
          <input type="radio" name="selectedJob" value="Project Manager" id="job3">
          <label for="job3"></label>
        </div>
        <div class="job-content">
          <h3>Project Manager</h3>
          <p>Plan and execute construction projects from start to finish</p>
          <span class="salary">from ¬£45 per hour</span>
        </div>
      </div>
      
      <div class="job-card" data-role="Steel Fixer">
        <div class="job-radio">
          <input type="radio" name="selectedJob" value="Steel Fixer" id="job4">
          <label for="job4"></label>
        </div>
        <div class="job-content">
          <h3>Steel Fixer</h3>
          <p>Install and secure steel reinforcement in concrete structures</p>
          <span class="salary">from ¬£25 per hour</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Paso 3: Detalles personales y documentos -->
  <div class="form-step" id="step3">
    <h2>Personal details</h2>
    
    <!-- Resumen de selecciones anteriores -->
    <div class="selection-summary">
      <div class="summary-item">
        <span class="summary-label">Location:</span>
        <span class="summary-value" id="selectedLocation">London, Leeds</span>
        <span class="checkmark">‚úì</span>
      </div>
      <div class="summary-item">
        <span class="summary-label">Roles:</span>
        <span class="summary-value" id="selectedRoles">360 Operator, Steel Fixer</span>
        <span class="checkmark">‚úì</span>
      </div>
    </div>

    <div class="form-group">
      <label for="name">Name: e.g. John Smith</label>
      <input 
        type="text" 
        id="name" 
        name="name" 
        required 
        placeholder="Enter your full name"
      />
    </div>

    <div class="form-group">
      <label for="phone">Phone: e.g. 07991123 456</label>
      <input 
        type="tel" 
        id="phone" 
        name="phone" 
        required 
        placeholder="Enter your phone number"
      />
    </div>

    <div class="form-group">
      <label for="email">Email (optional)</label>
      <input 
        type="email" 
        id="email" 
        name="email" 
        placeholder="Enter your email address"
      />
    </div>

    <div class="form-group">
      <label>Certification (optional)</label>
      <div class="file-upload-area" id="fileUploadArea">
        <div class="upload-content">
          <div class="upload-icon">üì§</div>
          <p>Click to upload or drag and drop</p>
          <p class="upload-hint">PDF, DOC, DOCX up to 10MB</p>
        </div>
        <input type="file" id="certification" name="certification" accept=".pdf,.doc,.docx" multiple>
      </div>
      <div class="uploaded-files" id="uploadedFiles"></div>
    </div>
  </div>

  <!-- Paso 4: Confirmaci√≥n -->
  <div class="form-step" id="step4">
    <div class="success-content">
      <div class="success-icon">üëç</div>
      <h2>We've received your application!</h2>
      <p>We will process it and reach out to you in a few days.</p>
    </div>
  </div>

  <!-- Botones de navegaci√≥n -->
  <div class="form-navigation">
    <button type="button" class="nav-btn prev-btn" id="prevBtn" style="display: none;">
      Previous
    </button>
    <button type="button" class="nav-btn next-btn" id="nextBtn">
      Next
    </button>
    <button type="submit" class="nav-btn submit-btn" id="submitBtn" style="display: none;">
      Submit Application
    </button>
  </div>
</div>

<style>
  .multi-step-form {
    max-width: 800px;
    margin: 0 auto;
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }

  /* Barra de progreso */
  .progress-bar {
    display: flex;
    background: #f8f9fa;
    padding: 20px;
    border-bottom: 1px solid #e9ecef;
  }

  .progress-step {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    opacity: 0.5;
    transition: all 0.3s ease;
  }

  .progress-step.active {
    opacity: 1;
  }

  .progress-step.completed {
    opacity: 1;
  }

  .step-number {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: #6c757d;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    margin-bottom: 8px;
    transition: all 0.3s ease;
  }

  .progress-step.active .step-number {
    background: #8b5cf6;
  }

  .progress-step.completed .step-number {
    background: #fbbf24;
  }

  .progress-step.completed .step-number::after {
    content: "‚úì";
    font-size: 18px;
  }

  .step-label {
    font-size: 14px;
    font-weight: 500;
    color: #6c757d;
    text-align: center;
  }

  .progress-step.active .step-label {
    color: #8b5cf6;
  }

  .progress-step.completed .step-label {
    color: #fbbf24;
  }

  /* Pasos del formulario */
  .form-step {
    display: none;
    padding: 40px;
    min-height: 400px;
  }

  .form-step.active {
    display: block;
  }

  .form-step h2 {
    color: #2d3748;
    margin-bottom: 30px;
    font-size: 24px;
    font-weight: 600;
  }

  .form-group {
    margin-bottom: 25px;
  }

  .form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: #4a5568;
    font-size: 14px;
  }

  .input-with-icon {
    position: relative;
  }

  .input-with-icon input {
    width: 100%;
    padding: 12px 40px 12px 16px;
    border: 2px solid #e2e8f0;
    border-radius: 8px;
    font-size: 16px;
    transition: all 0.3s ease;
  }

  .input-with-icon input:focus {
    outline: none;
    border-color: #8b5cf6;
    box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
  }

  .input-icon {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 18px;
  }

  /* Sugerencias de ubicaci√≥n */
  .suggestions {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-top: 15px;
  }

  .suggestion-btn {
    padding: 8px 16px;
    border: 2px solid #e2e8f0;
    background: white;
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 14px;
    color: #4a5568;
  }

  .suggestion-btn:hover {
    border-color: #8b5cf6;
    color: #8b5cf6;
  }

  .suggestion-btn.selected {
    background: #8b5cf6;
    border-color: #8b5cf6;
    color: white;
  }

  /* Tarjetas de trabajo */
  .job-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }

  .job-card {
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    padding: 20px;
    position: relative;
    cursor: pointer;
    transition: all 0.3s ease;
    background: white;
  }

  .job-card:hover {
    border-color: #8b5cf6;
    box-shadow: 0 4px 12px rgba(139, 92, 246, 0.1);
  }

  .job-card.selected {
    border-color: #8b5cf6;
    background: #f8f7ff;
  }

  .job-radio {
    position: absolute;
    top: 15px;
    right: 15px;
  }

  .job-radio input[type="radio"] {
    display: none;
  }

  .job-radio label {
    width: 20px;
    height: 20px;
    border: 2px solid #e2e8f0;
    border-radius: 50%;
    display: block;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .job-radio input[type="radio"]:checked + label {
    border-color: #8b5cf6;
    background: #8b5cf6;
  }

  .job-radio input[type="radio"]:checked + label::after {
    content: "";
    width: 8px;
    height: 8px;
    background: white;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .job-content h3 {
    color: #2d3748;
    margin-bottom: 8px;
    font-size: 18px;
    font-weight: 600;
  }

  .job-content p {
    color: #718096;
    margin-bottom: 12px;
    font-size: 14px;
    line-height: 1.5;
  }

  .salary {
    color: #8b5cf6;
    font-weight: 600;
    font-size: 14px;
  }

  /* Resumen de selecciones */
  .selection-summary {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 30px;
  }

  .summary-item {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
  }

  .summary-item:last-child {
    margin-bottom: 0;
  }

  .summary-label {
    font-weight: 500;
    color: #4a5568;
    margin-right: 10px;
    min-width: 80px;
  }

  .summary-value {
    flex: 1;
    color: #2d3748;
  }

  .checkmark {
    color: #fbbf24;
    font-weight: bold;
    font-size: 16px;
  }

  /* √Årea de carga de archivos */
  .file-upload-area {
    border: 2px dashed #e2e8f0;
    border-radius: 8px;
    padding: 40px;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    background: #fafafa;
  }

  .file-upload-area:hover {
    border-color: #8b5cf6;
    background: #f8f7ff;
  }

  .file-upload-area.dragover {
    border-color: #8b5cf6;
    background: #f8f7ff;
  }

  .upload-content {
    pointer-events: none;
  }

  .upload-icon {
    font-size: 48px;
    margin-bottom: 16px;
    color: #8b5cf6;
  }

  .upload-content p {
    margin: 0;
    color: #4a5568;
  }

  .upload-hint {
    font-size: 12px;
    color: #a0aec0;
    margin-top: 4px;
  }

  .file-upload-area input[type="file"] {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
  }

  .uploaded-files {
    margin-top: 15px;
  }

  .uploaded-file {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px;
    background: #f8f9fa;
    border-radius: 6px;
    margin-bottom: 8px;
  }

  .file-info {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .file-name {
    font-weight: 500;
    color: #2d3748;
  }

  .file-size {
    color: #718096;
    font-size: 12px;
  }

  .remove-file {
    background: #e53e3e;
    color: white;
    border: none;
    border-radius: 4px;
    padding: 4px 8px;
    cursor: pointer;
    font-size: 12px;
  }

  /* Contenido de √©xito */
  .success-content {
    text-align: center;
    padding: 60px 20px;
  }

  .success-icon {
    font-size: 80px;
    margin-bottom: 30px;
    animation: bounce 2s infinite;
  }

  @keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }

  .success-content h2 {
    color: #2d3748;
    margin-bottom: 15px;
    font-size: 28px;
  }

  .success-content p {
    color: #718096;
    font-size: 16px;
  }

  /* Navegaci√≥n */
  .form-navigation {
    display: flex;
    justify-content: space-between;
    padding: 20px 40px;
    background: #f8f9fa;
    border-top: 1px solid #e9ecef;
  }

  .nav-btn {
    padding: 12px 24px;
    border: none;
    border-radius: 8px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 14px;
  }

  .prev-btn {
    background: #e2e8f0;
    color: #4a5568;
  }

  .prev-btn:hover {
    background: #cbd5e0;
  }

  .next-btn, .submit-btn {
    background: #8b5cf6;
    color: white;
  }

  .next-btn:hover, .submit-btn:hover {
    background: #7c3aed;
    transform: translateY(-1px);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .multi-step-form {
      margin: 10px;
    }

    .form-step {
      padding: 20px;
    }

    .form-navigation {
      padding: 15px 20px;
    }

    .job-cards {
      grid-template-columns: 1fr;
    }

    .progress-bar {
      padding: 15px;
    }

    .step-label {
      font-size: 12px;
    }
  }
</style>

<script>
  class MultiStepForm {
    constructor() {
      this.currentStep = 1;
      this.totalSteps = 4;
      this.formData = {
        location: '',
        roles: '',
        selectedJob: '',
        name: '',
        phone: '',
        email: '',
        files: []
      };
      
      this.init();
    }

    init() {
      this.bindEvents();
      this.updateProgressBar();
      this.updateNavigation();
    }

    bindEvents() {
      // Navegaci√≥n
      document.getElementById('nextBtn').addEventListener('click', () => this.nextStep());
      document.getElementById('prevBtn').addEventListener('click', () => this.prevStep());
      document.getElementById('submitBtn').addEventListener('click', () => this.submitForm());

      // Sugerencias de ubicaci√≥n
      document.querySelectorAll('.suggestion-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
          const location = e.target.dataset.location;
          document.getElementById('location').value = location;
          this.formData.location = location;
          this.updateSuggestionButtons(e.target);
        });
      });

      // Tarjetas de trabajo
      document.querySelectorAll('.job-card').forEach(card => {
        card.addEventListener('click', (e) => {
          const radio = card.querySelector('input[type="radio"]');
          radio.checked = true;
          this.formData.selectedJob = radio.value;
          this.updateJobCards(card);
        });
      });

      // Carga de archivos
      this.setupFileUpload();

      // Actualizar resumen en tiempo real
      document.getElementById('location').addEventListener('input', (e) => {
        this.formData.location = e.target.value;
        this.updateSummary();
      });

      document.getElementById('roles').addEventListener('input', (e) => {
        this.formData.roles = e.target.value;
        this.updateSummary();
      });
    }

    nextStep() {
      if (this.validateCurrentStep()) {
        this.currentStep++;
        this.showStep(this.currentStep);
        this.updateProgressBar();
        this.updateNavigation();
        this.updateSummary();
      }
    }

    prevStep() {
      if (this.currentStep > 1) {
        this.currentStep--;
        this.showStep(this.currentStep);
        this.updateProgressBar();
        this.updateNavigation();
      }
    }

    showStep(step) {
      document.querySelectorAll('.form-step').forEach(stepEl => {
        stepEl.classList.remove('active');
      });
      document.getElementById(`step${step}`).classList.add('active');
    }

    updateProgressBar() {
      document.querySelectorAll('.progress-step').forEach((step, index) => {
        step.classList.remove('active', 'completed');
        if (index + 1 < this.currentStep) {
          step.classList.add('completed');
        } else if (index + 1 === this.currentStep) {
          step.classList.add('active');
        }
      });
    }

    updateNavigation() {
      const prevBtn = document.getElementById('prevBtn');
      const nextBtn = document.getElementById('nextBtn');
      const submitBtn = document.getElementById('submitBtn');

      prevBtn.style.display = this.currentStep > 1 ? 'block' : 'none';
      
      if (this.currentStep < this.totalSteps) {
        nextBtn.style.display = 'block';
        submitBtn.style.display = 'none';
      } else {
        nextBtn.style.display = 'none';
        submitBtn.style.display = 'block';
      }
    }

    validateCurrentStep() {
      switch (this.currentStep) {
        case 1:
          const location = document.getElementById('location').value.trim();
          if (!location) {
            alert('Please enter a location');
            return false;
          }
          this.formData.location = location;
          break;
        case 2:
          const selectedJob = document.querySelector('input[name="selectedJob"]:checked');
          if (!selectedJob) {
            alert('Please select a job position');
            return false;
          }
          this.formData.selectedJob = selectedJob.value;
          break;
        case 3:
          const name = document.getElementById('name').value.trim();
          const phone = document.getElementById('phone').value.trim();
          if (!name || !phone) {
            alert('Please fill in all required fields');
            return false;
          }
          this.formData.name = name;
          this.formData.phone = phone;
          this.formData.email = document.getElementById('email').value.trim();
          break;
      }
      return true;
    }

    updateSuggestionButtons(selectedBtn) {
      document.querySelectorAll('.suggestion-btn').forEach(btn => {
        btn.classList.remove('selected');
      });
      selectedBtn.classList.add('selected');
    }

    updateJobCards(selectedCard) {
      document.querySelectorAll('.job-card').forEach(card => {
        card.classList.remove('selected');
      });
      selectedCard.classList.add('selected');
    }

    updateSummary() {
      const locationEl = document.getElementById('selectedLocation');
      const rolesEl = document.getElementById('selectedRoles');
      
      if (locationEl) {
        locationEl.textContent = this.formData.location || 'Not selected';
      }
      if (rolesEl) {
        rolesEl.textContent = this.formData.selectedJob || 'Not selected';
      }
    }

    setupFileUpload() {
      const uploadArea = document.getElementById('fileUploadArea');
      const fileInput = document.getElementById('certification');
      const uploadedFiles = document.getElementById('uploadedFiles');

      // Click para abrir selector de archivos
      uploadArea.addEventListener('click', () => fileInput.click());

      // Drag and drop
      uploadArea.addEventListener('dragover', (e) => {
        e.preventDefault();
        uploadArea.classList.add('dragover');
      });

      uploadArea.addEventListener('dragleave', () => {
        uploadArea.classList.remove('dragover');
      });

      uploadArea.addEventListener('drop', (e) => {
        e.preventDefault();
        uploadArea.classList.remove('dragover');
        this.handleFiles(e.dataTransfer.files);
      });

      // Cambio en input de archivos
      fileInput.addEventListener('change', (e) => {
        this.handleFiles(e.target.files);
      });
    }

    handleFiles(files) {
      Array.from(files).forEach(file => {
        if (this.validateFile(file)) {
          this.formData.files.push(file);
          this.displayUploadedFile(file);
        }
      });
    }

    validateFile(file) {
      const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
      const maxSize = 10 * 1024 * 1024; // 10MB

      if (!allowedTypes.includes(file.type)) {
        alert('Please upload only PDF, DOC, or DOCX files');
        return false;
      }

      if (file.size > maxSize) {
        alert('File size must be less than 10MB');
        return false;
      }

      return true;
    }

    displayUploadedFile(file) {
      const uploadedFiles = document.getElementById('uploadedFiles');
      const fileDiv = document.createElement('div');
      fileDiv.className = 'uploaded-file';
      fileDiv.innerHTML = `
        <div class="file-info">
          <span class="file-name">${file.name}</span>
          <span class="file-size">${this.formatFileSize(file.size)}</span>
        </div>
        <button type="button" class="remove-file" onclick="this.parentElement.remove()">Remove</button>
      `;
      uploadedFiles.appendChild(fileDiv);
    }

    formatFileSize(bytes) {
      if (bytes === 0) return '0 Bytes';
      const k = 1024;
      const sizes = ['Bytes', 'KB', 'MB', 'GB'];
      const i = Math.floor(Math.log(bytes) / Math.log(k));
      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    submitForm() {
      if (this.validateCurrentStep()) {
        // Simular env√≠o
        console.log('Form data:', this.formData);
        
        // Mostrar paso de confirmaci√≥n
        this.currentStep = 4;
        this.showStep(4);
        this.updateProgressBar();
        this.updateNavigation();
      }
    }
  }

  // Inicializar cuando el DOM est√© listo
  document.addEventListener('DOMContentLoaded', () => {
    new MultiStepForm();
  });
</script>
